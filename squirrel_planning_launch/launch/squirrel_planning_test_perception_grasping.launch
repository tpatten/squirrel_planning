<?xml version="1.0"?>
<launch>

	<!-- domain file -->
	<param name="/rosplan/data_path" value="$(find squirrel_planning_launch)/common/" />
	<!--param name="/rosplan/planner_path" value="$(find squirrel_planning_launch)/common/bin/" /-->

	<!-- domain file -->
	<!--param name="/rosplan/domain_path" value="$(find squirrel_scenarios)/tim/tidy_room_domain_ICRA2017.pddl" /-->
	<param name="/rosplan/domain_path" value="$(find rosplan_config)/planner/domain.pddl" />
	<!--param name="/rosplan/domain_path" value="$(find squirrel_scenarios)/tim/simple_domain.pddl" /-->
	<!--param name="/rosplan/domain_path" value="$(find squirrel_planning_launch)/common/grasping_domain-nt.pddl" /-->

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen" />

	<!-- scene database (MongoDB) -->
	<node name="rosplan_scene_database" pkg="mongodb_store" type="mongodb_server.py" respawn="false" output="screen">
		<param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB" />
	</node>
	<node name="rosplan_scene_message_store" pkg="mongodb_store" type="message_store_node.py" respawn="false" output="screen" />

	<!-- planning system -->
	<node name="rosplan_planning_system" pkg="rosplan_planning_system" type="planner" respawn="false" output="screen">
		<!-- directory for generated files -->
		<param name="data_path" value="$(find squirrel_planning_launch)/common/" />
		<param name="problem_path" value="$(find squirrel_planning_launch)/common/problem.pddl" />
		<param name="strl_file_path" value="$(find squirrel_planning_launch)/common/plan.strl" />
		<!-- to run the planner -->
		<param name="planner_command" value="timeout 10 $(find rosplan_config)/planner/bin/popf -n DOMAIN PROBLEM" />
		<param name="generate_default_problem" value="true" />
		<param name="max_dispatch_attempts" value="2" />
	</node>

	<!-- standard ROS interfaces -->
	<node name="rosplan_interface_movebase" pkg="rosplan_interface_movebase" type="rpmovebase" respawn="false" output="screen">
		<param name="action_server" value="/move_base" />
		<param name="pddl_action_name" value="goto_waypoint" />
	</node>

	<node name="rosplan_interface_mapping" pkg="rosplan_interface_mapping" type="rproadmapServer" respawn="false" output="screen">
	    <param name="data_path" value="$(find squirrel_planning_launch)/common/" />
	    <param name="cost_map_topic" value="/move_base/global_costmap/costmap" />
	    <param name="cost_map_update_topic" value="/move_base/global_costmap/costmap_updates" />
	    <param name="odom_topic" value="/odom" />
	    <param name="use_static_map" value="false" />
	    <param name="static_map_service" value="/static_map" />
	</node>

	<!-- Squirrel interface nodes -->
	<node name="squirrel_interface_recursion" pkg="squirrel_planning_execution" type="rpsquirrelRecursion" respawn="false" output="screen">
		<param name="occupancy_topic" value="/squirrel_nav/occupancy_map" />
		<param name="simulated" value="true" />
	</node>

	<node name="squirrel_object_server" pkg="squirrel_interface_perception" type="rpObjectPerception" respawn="false" output="screen"></node>

	<node name="squirrel_interface_mapping" pkg="squirrel_planning_execution" type="rpsquirrelRoadmap" respawn="false" output="screen">
	    <param name="data_path" value="$(find squirrel_planning_launch)/common/" />
	    <param name="cost_map_topic" value="/move_base/global_costmap/costmap" />
	    <param name="cost_map_update_topic" value="/move_base/global_costmap/costmap_updates" />
	    <param name="use_static_map" value="false" type="bool" />
	    <param name="static_map_service" value="/static_map" />
	    <param name="occupancy_threshold" value="20" />
	    <param name="manipulation_service_topic" value="/squirrel_manipulation/waypoint_request" />
	</node>

	<node name="squirrel_planning_interface_perception" pkg="squirrel_interface_perception" type="rpperceptionServer" output="screen">
		<param name="action_server" value="/squirrel_look_for_objects" />
		<param name="use_dynamic_object_finding" value="false" />
	</node>

	<node name="squirrel_interface_manipulation" pkg="squirrel_interface_manipulation" type="rpgraspServer" respawn="false" output="screen">
		<param name="blind_grasp_action_server" value="/blindGrasp" />
	</node>

	<node name="squirrel_grasping_node" pkg="squirrel_grasping" type="squirrel_grasping_node.py" output="screen">
	  <param name="hand" value="fakehand" type="string"/>
	</node>

	<node name="squirrel_ptp_server" pkg="squirrel_ptp_server" type="squirrel_ptp" respawn="true" output="screen" >
    <param name='tip_link' value='hand_base_link' type='string'/>
	</node>

</launch>
